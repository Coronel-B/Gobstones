//RECORRIDOS 

//PRO: Posiciona el cabezal al origen del tablero
procedure IrAlOrigen() {
	IrAlExtremo(Sur)
	IrAlExtremo(Oeste)
}

--PRO: Posiciona el cabezal en la ultima celda en un recorrido en direccion @param d
procedure IrAlExtremo(d) {
	while(puedeMover(d)) {
		Mover(d)
	}
}

/*Mueve en una direccion y sino puede mueve hacia la otra direccion*/
procedure MoverT(d,d2) {
	if (puedeMover(d)) {
		Mover(d)
	} 
	if (not puedeMover(d) && puedeMover(d2)) {
		IrAlExtremo(opuesto(d))
		Mover(d2)
	}
}

//True cuando el cabezal no se encuentra en el extremo (d,d2)
function puedeMoverT(d,d2) {
	return (puedeMover(d) || puedeMover(d2))
}

/*PRO: Se posiciona al opuesto del extremo de dos direccion para inicializar un recorrido*/
procedure InicializarRecorridoHacia(d1, d2) {
	IrAlExtremo(opuesto(d1))
	IrAlExtremo(opuesto(d2))
}


//_____________________________________________________

//FUNCIONES CONDICIONALES

function ifElse(condicion, v, f) {
	ret := f
	if (condicion) {
		ret := v
	}
	return (ret)
}